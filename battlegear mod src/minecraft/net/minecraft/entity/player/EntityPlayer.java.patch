--- 
+++ 
@@ -10,6 +10,10 @@
 import java.util.List;
 import java.util.Map.Entry;
 
+import mods.battlegear2.api.IShield;
+import mods.battlegear2.inventory.InventoryPlayerBattle;
+import mods.battlegear2.items.ItemShield;
+import mods.battlegear2.utils.BattlegearUtils;
 import net.minecraft.block.Block;
 import net.minecraft.block.BlockBed;
 import net.minecraft.block.material.Material;
@@ -67,6 +71,7 @@
 import net.minecraft.util.Vec3;
 import net.minecraft.world.EnumGameType;
 import net.minecraft.world.World;
+import net.minecraft.world.WorldServer;
 import net.minecraft.world.chunk.IChunkProvider;
 
 import net.minecraftforge.common.ForgeHooks;
@@ -83,9 +88,127 @@
 
 public abstract class EntityPlayer extends EntityLivingBase implements ICommandSender
 {
+	/*
+	 * Mine & Blade: Notes Edits made by: nerd-boy
+	 * 
+	 * Edits: 4 Added Methods: 6 Added Fields: 4 edits?
+	 * 
+	 * Adding methods and fields is relatively easy. Some of the methods
+	 * provided are not needed, they do however provide more simple access.
+	 * 
+	 * The only other edit is to replace the instance of Inventory player with
+	 * the custom Inventory class. It has also been marked as private to prevent
+	 * other mods changing this later.
+	 * 
+	 * The method in OnUpdate has not been added in the transfomer yet
+	 */
+	
+	// -----MB-addFilds-----
+	public float offHandSwingProgress;
+	public float prevOffHandSwingProgress;
+	public int offHandSwingProgressInt;
+	public boolean isOffHandSwingInProgress;
+    public int specialActionTimer;
+	
+	// -----MB-AddMethod-----
+	public void attackTargetEntityWithCurrentOffItem(Entity target) {
+
+        inventory.currentItem = inventory.currentItem
+				+ InventoryPlayerBattle.WEAPON_SETS;
+		attackTargetEntityWithCurrentItem(target);
+		inventory.currentItem = inventory.currentItem
+				- InventoryPlayerBattle.WEAPON_SETS;
+	}
+	
+	// -----MB-AddMethod-----
+	public void swingOffItem() {
+		if (!this.isOffHandSwingInProgress
+				|| this.offHandSwingProgressInt >= this
+						.getArmSwingAnimationEndCopy() / 2
+				|| this.offHandSwingProgressInt < 0) {
+			this.offHandSwingProgressInt = -1;
+			this.isOffHandSwingInProgress = true;
+			}
+	}
+	
+	// -----MB-AddMethod-----
+	public float getOffSwingProgress(float frame) {
+		float diff = this.offHandSwingProgress - this.prevOffHandSwingProgress;
+		if (diff < 0.0F) {
+			++diff;
+		}
+		return this.prevOffHandSwingProgress + diff * frame;
+	}
+	
+	// -----MB-AddMethod-----
+	private int getArmSwingAnimationEndCopy() {
+		return this.isPotionActive(Potion.digSpeed) ? 6 - (1 + this
+				.getActivePotionEffect(Potion.digSpeed).getAmplifier()) * 1
+				: (this.isPotionActive(Potion.digSlowdown) ? 6 + (1 + this
+						.getActivePotionEffect(Potion.digSlowdown)
+						.getAmplifier()) * 2 : 6);
+	}
+	
+	// -----MB-AddMethod----- (Overridden)
+	@Override
+	protected void updateArmSwingProgress() {
+		super.updateArmSwingProgress();
+	
+		this.prevOffHandSwingProgress = this.offHandSwingProgress;
+			int var1 = this.getArmSwingAnimationEndCopy();
+			if (this.isOffHandSwingInProgress) {
+			++this.offHandSwingProgressInt;
+				if (this.offHandSwingProgressInt >= var1) {
+				this.offHandSwingProgressInt = 0;
+				this.isOffHandSwingInProgress = false;
+			}
+		} else {
+			this.offHandSwingProgressInt = 0;
+		}
+			this.offHandSwingProgress = (float) this.offHandSwingProgressInt
+				/ (float) var1;
+
+
+        if(specialActionTimer > 0){
+            this.isOffHandSwingInProgress = false;
+            this.isSwingInProgress = false;
+            this.offHandSwingProgress = 0;
+            this.offHandSwingProgressInt = 0;
+            this.swingProgress = 0;
+            this.field_110158_av = 0;
+
+        }
+
+	}
+	
+	// -----MB-AddMethod-----
+	public boolean isBattlemode() {
+		return ((InventoryPlayerBattle) inventory).isBattlemode();
+	}
+
+    //-----MB-AddMethod-----  (TODO: Add to coremod)
+    public boolean isBlockingWithShield(){
+        if(((InventoryPlayerBattle)inventory).getCurrentOffhandWeapon() != null &&
+                ((InventoryPlayerBattle)inventory).getCurrentOffhandWeapon().getItem() instanceof IShield){
+            return dataWatcher.getWatchableObjectByte(25) > 0;
+        }else
+            return false;
+    }
+    //-----MB-AddMethod-----  (TODO: Add to coremod)
+    public void setBlockingWithShield(boolean block){
+        if(block &&
+                ((InventoryPlayerBattle)inventory).getCurrentOffhandWeapon() != null &&
+                ((InventoryPlayerBattle)inventory).getCurrentOffhandWeapon().getItem() instanceof ItemShield){
+            dataWatcher.updateObject(25, (byte)1);
+        }else{
+            dataWatcher.updateObject(25, (byte)0);
+        }
+    }
+		
     public static final String PERSISTED_NBT_TAG = "PlayerPersisted";
     /** Inventory of the player */
-    public InventoryPlayer inventory = new InventoryPlayer(this);
+    //-----MB-Edited-----
+    public final InventoryPlayer inventory = BattlegearUtils.replaceInventory(this);
     private InventoryEnderChest theInventoryEnderChest = new InventoryEnderChest();
 
     /**
@@ -201,12 +324,16 @@
         this.func_110140_aT().func_111150_b(SharedMonsterAttributes.field_111264_e).func_111128_a(1.0D);
     }
 
+
+    //-----MB-Edited-----  (TODO: test coremod)
     protected void entityInit()
     {
         super.entityInit();
         this.dataWatcher.addObject(16, Byte.valueOf((byte)0));
         this.dataWatcher.addObject(17, Float.valueOf(0.0F));
         this.dataWatcher.addObject(18, Integer.valueOf(0));
+
+        this.dataWatcher.addObject(25, (byte)0);
     }
 
     @SideOnly(Side.CLIENT)
@@ -282,6 +409,7 @@
         if (this.itemInUse != null)
         {
             ItemStack itemstack = this.inventory.getCurrentItem();
+
 
             if (itemstack == this.itemInUse)
             {
@@ -468,11 +596,12 @@
 
             if (itemstack != this.itemInUse || itemstack != null && itemstack.stackSize != i)
             {
-                this.inventory.mainInventory[this.inventory.currentItem] = itemstack;
+            	//-----MB-Edited-----
+            	BattlegearUtils.setPlayerCurrentItem(this, itemstack);
 
                 if (itemstack.stackSize == 0)
                 {
-                    this.inventory.mainInventory[this.inventory.currentItem] = null;
+                	BattlegearUtils.setPlayerCurrentItem(this, null);
                 }
             }
 
@@ -2385,7 +2514,8 @@
     {
         if (par1 == 0)
         {
-            this.inventory.mainInventory[this.inventory.currentItem] = par2ItemStack;
+        	//-----MB-Edited-----
+        	BattlegearUtils.setPlayerCurrentItem(this, par2ItemStack);
         }
         else
         {
